.input {
  &__head {
    @extend %secondaryTextRegular;
    margin-bottom: 7px;
    color: $black;
  }

  &__hint {
    @extend %hidden;
    @extend %secondaryTextRegular;
    color: $greyTxt;
    transition:
      $transitionColor,
      $transitionOpacity,
      $transitionBoxShadow,
      $transitionVisibility,
      margin 0.5s ease;
    height: 0;
    margin-top: 0;
  }

  &__input {
    @extend %flexCenterBetween;
    cursor: pointer;
    padding: 11px;
    border-radius: 4px;
    background-color: $white;
    column-gap: 8px;
    border-radius: 4px;
    border: 1px solid $inputGreyStroke;
    transition: $transitionBorder, $transitionBoxShadow;

    button {
      @include sizes(20px, 20px);
      flex-shrink: 0;
    }

    button svg {
      stroke: $greyTxt;
      transition: stroke 0.5s ease;
    }

    input,
    input::placeholder {
      @extend %regular16;
      transition: $transitionColor;
    }

    input {
      width: 100%;
      font-weight: 500;
      color: $black;
      border: 0;
      background-color: transparent;
      color: $black;

      &:disabled {
        input,
        input::placeholder {
          color: $stateDisabled;
        }

        & + button svg {
          stroke: $stateDisabled;
        }
      }

      &::placeholder {
        color: $greyTxt;
      }
    }
  }

  &.--error {
    .input {
      &__hint {
        @extend %visible;
        color: $red;
        height: auto;
        margin-top: 8px;
      }

      &__input {
        border-radius: 4px;
        // border-color: $red;
        // box-shadow: 0px 0px 0px 3px #fddddc;

        button svg {
          stroke: $red;
        }

        input,
        input::placeholder {
          color: $red;
        }
      }
    }
  }

  &.--disabled {
    .input {
      &__input {
        border-radius: 4px;
        border-color: $inputGreyStroke;
      }

      button svg {
        stroke: $stateDisabled;
      }

      input,
      input::placeholder {
        color: $stateDisabled;
      }

      &__head,
      &__hint {
        color: $stateDisabled;
      }
    }
  }

  &.--focus {
    .input {
      &__input {
        border-radius: 4px;
        border-color: $bluePrimary;
        box-shadow: 0px 0px 0px 3px #dcedff;
        color: $black;
      }
    }

    &.--error {
      .input {
        &__input {
          border-color: $red;
          box-shadow: 0px 0px 0px 3px #fddddc;
        }
      }
    }
  }
}

.input-labels {
  .input {
    &__items {
      @extend %flexCenterStart;
      flex-wrap: wrap;
      row-gap: 20px;
      column-gap: 20px;
    }

    &__item {
      label,
      div {
        @extend %flexCenter;
        padding: 11px 16px;
        border-radius: 4px;
        background-color: $bgGreyLight;
        column-gap: 8px;
        border: 1px solid transparent;
        cursor: pointer;
        transition: $transitionBorder;
      }

      input {
        display: none;
      }

      input:checked + label {
        border-color: $bluePrimary;

        span {
          color: $bluePrimary;
        }

        svg use {
          stroke: $bluePrimary;
        }
      }

      svg {
        @include sizes(20px, 20px);
        flex-shrink: 0;

        use {
          stroke: $black;
          transition: stroke 0.5s ease-in-out;
        }
      }

      span {
        @extend %regular16;
        cursor: pointer;
        transition: $transitionColor;
      }

      &.active {
        svg use {
          stroke: $bluePrimary;
        }

        label {
          color: $bluePrimary;
        }

        border-color: $bluePrimary;
      }
    }
  }
}

.input--password {
  button {
    svg {
      &:first-child {
        display: block;
      }
      &:last-child {
        display: none;
      }
    }

    &.--active {
      svg {
        &:first-child {
          display: none;
        }

        &:last-child {
          display: block;
        }
      }
    }
  }
}

.input-file {
  input {
    display: none;
  }

  label {
    @extend %flexCenter;
    cursor: pointer;
    column-gap: 8px;

    svg {
      @include sizes(20px, 20px);
      use {
        stroke: $bluePrimary;
      }
    }

    span {
      font-size: 18px;
      font-weight: 600;
      line-height: 140%;
      color: $bluePrimary;
    }
  }

  &:hover {
    svg use,
    label span {
      stroke: $blueHover;
    }
  }
}

@media screen and (max-width: $mob) {
  .input {
    label {
      column-gap: 4px;
    }
  }

  .input-labels {
    .input {
      &__items {
        row-gap: 16px;
        column-gap: 16px;
      }
    }
  }
}
